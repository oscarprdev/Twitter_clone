name: Deployment pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  cache-npm:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache npm dependencies
        uses: actions/cache@v2
        with:
          path: |
            frontend/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('frontend/package-lock.json') }}
        id: npm-cache

  lint:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # - uses: actions/setup-node@v4
      #   with:
      #     node-version: 18
      #     cache: 'npm'
      #     cache-dependency-path: frontend/package-lock.json

      - name: Restore npm cache
        uses: actions/cache@v2
        with:
          path: |
            frontend/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('frontend/package-lock.json') }}
        id: npm-cache

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  build:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # - uses: actions/setup-node@v4
      #   with:
      #     node-version: 18
      #     cache: 'npm'
      #     cache-dependency-path: frontend/package-lock.json

      - name: Restore npm cache
        uses: actions/cache@v2
        with:
          path: |
            frontend/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('frontend/package-lock.json') }}
        id: npm-cache

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  unit_tests:
    needs: [cache-npm, lint, build]
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # - uses: actions/setup-node@v4
      #   with:
      #     node-version: 18
      #     cache: 'npm'
      #     cache-dependency-path: frontend/package-lock.json
      - name: Download npm cache artifact
        uses: actions/download-artifact@v2
        with:
          name: npm-cache
          path: frontend/node_modules

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit

  e2e_tests:
    needs: [cache-npm, lint, build]
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # - uses: actions/setup-node@v4
      #   with:
      #     node-version: 18
      #     cache: 'npm'
      #     cache-dependency-path: frontend/package-lock.json
      - name: Download npm cache artifact
        uses: actions/download-artifact@v2
        with:
          name: npm-cache
          path: frontend/node_modules

      - name: Install dependencies
        run: npm ci

      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Run e2e tests
        run: npx playwright install --with-deps && npm run test:e2e
